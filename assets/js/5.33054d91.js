(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{230:function(t,s,a){t.exports=a.p+"assets/img/commit-log.5335a149.png"},258:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"conventional-commits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conventional-commits","aria-hidden":"true"}},[this._v("#")]),this._v(" Conventional Commits")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"개요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#개요","aria-hidden":"true"}},[this._v("#")]),this._v(" 개요")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"설치"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설치","aria-hidden":"true"}},[this._v("#")]),this._v(" 설치")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[this._v("yarn")]),this._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("add")]),this._v(" husky @commitlint/cli @commitlint/config-conventional -D\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),s("p",[this._v("husky가 githook 을 덮어쓰기 때문에 husky 설정 이전에 repo를 먼저 초기화 해야 합니다.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"설정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설정","aria-hidden":"true"}},[this._v("#")]),this._v(" 설정")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test-conventionalcommits"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example-conventional-commits"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"author"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jwkim2 <jwkim2@cookapps.com>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"license"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MIT"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@commitlint/cli"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^7.5.2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"@commitlint/config-conventional"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^7.5.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.3.1"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commitlint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("husky: commit-msg 라는 git hook이 실행되면 commitlint를 실행합니다.")]),this._v(" "),s("li",[this._v("commitlint: commitlint에서 제공하는 commitlint/config-conventional를 상속(확장)합니다.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"사용법"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#사용법","aria-hidden":"true"}},[this._v("#")]),this._v(" 사용법")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<type>[optional scope]: <description>\n\n# Examples\n\nfix: allow login without uid\nfeat: add chat function\nBREAKING CHANGE: 'extend' > 'inherit', must fix all the codes\n\n# Examples with optional scope\n\nfix(chat): broken emoji\nfeat(auth): add Google Play Auth\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("SemVer")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("fix")]),t._v(" "),a("td",[t._v("PATCH")]),t._v(" "),a("td",[t._v("Bug Fix, API 변경 사항 없이 내부 수정")])]),t._v(" "),a("tr",[a("td",[t._v("feat")]),t._v(" "),a("td",[t._v("MINOR")]),t._v(" "),a("td",[t._v("기능 추가, API 변경(하위 호환)")])]),t._v(" "),a("tr",[a("td",[t._v("BREAKING CHANGE")]),t._v(" "),a("td",[t._v("MAGER")]),t._v(" "),a("td",[t._v("API 의 변경, 큰 변화")])]),t._v(" "),a("tr",[a("td",[t._v("refactor")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("내부적인 리펙토링")])]),t._v(" "),a("tr",[a("td",[t._v("docs")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("문서")])]),t._v(" "),a("tr",[a("td",[t._v("test")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("테스트 코드")])]),t._v(" "),a("tr",[a("td",[t._v("chore")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("그외 자잘한 수정 사항들")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"changelog-자동화"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changelog-자동화","aria-hidden":"true"}},[this._v("#")]),this._v(" CHANGELOG 자동화")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("git 의 commit 로그를 확인하여 새로운 version을 생성하고 packet.json 에 version 필드를 갱신합니다.")]),this._v(" "),s("li",[this._v("Conventional Commits 에 해당하는 내용을 CHANGELOG.md 파일에 추가합니다.")]),this._v(" "),s("li",[this._v("두가지 내용을 묶어서 한번에 chore(release): 버전명(예: 1.1.2) 형태의 메시지로 커밋합니다.")]),this._v(" "),s("li",[this._v("버전명을 Tag로 만들어서 git에 추가합니다.")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:a(230),alt:"commit-log"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"설치-및-설정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#설치-및-설정","aria-hidden":"true"}},[this._v("#")]),this._v(" 설치 및 설정")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[this._v("yarn")]),this._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[this._v("add")]),this._v(" standard-version -D\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ...\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"release"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard-version"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"사용법-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#사용법-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 사용법")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" release --first-release "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 최초에 한번: CHANGELOG.md 파일을 생성함")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" release "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 새로운 버전을 생성하고 CHANGELOG.md 버전 내용을 추가 및 커밋")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])}],e=a(0),r=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("본 포스팅의 완성 된 "),a("a",{attrs:{href:"https://github.com/cookpi/example-conventional-commits.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("예제 소스"),a("OutboundLink")],1),t._v("는 GitHub에 올려져 있습니다.")]),t._v(" "),t._m(1),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),a("OutboundLink")],1),t._v("이란 git 으로 commit 시에 일괄된 양식을 유지하고 그 양식을 바탕으로 버전 관리나 Change Log 를 만들어 냄을 의미합니다. 컨벤션의 일환이지만 npm 모듈을 통하여 강제로 적용하여 실수가 일어나지 않게 합니다.")]),t._v(" "),a("p",[t._v("전체적인 흐름은 git commit > git hook > husky > commitlint 순서로 진행됩니다. commit 을 하게 되면 git hook 이 발생하고 husky 가 트리거를 받아서 commitlint 실행하게 하게 되고 규칙에 맞는 commit 로그 일 경우 통과 시키고 그러지 않으면 commit 을 실패 시킵니다.")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.npmjs.com/package/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),a("OutboundLink")],1),t._v(": git hook 을 트리거 하는 용도")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://conventional-changelog.github.io/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),a("OutboundLink")],1),t._v(": commit 에 대한 lint를 확인하여 성공/실패를 리턴합니다.")])]),t._v(" "),a("p",[t._v("commitlint 를 직접 작성 할 수도 있지만 Google(Angular)등에서 사용하는 이미 정의된 설정을 사용하고 필요에 의해서 확장하여 사용합니다.")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("하이라이트된 라인을 추가합니다.")]),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._v(" "),a("p",[t._v("다음과 같은 형식으로 commit을 합니다.")]),t._v(" "),t._m(9),t._m(10),t._v(" "),a("p",[t._v("형식에 맞지 않는 commit message 를 사용할 경우 commit이 실패 합니다.")]),t._v(" "),a("p",[t._v("Conventional Commits은 SemVer를 따르기 때문에 MAGER.MINOR.PATCH 에 해당하는 type을 사용하면 차후 release 할때 자동으로 해당 하는 버전이 올라가고 나머지는 버전을 올라가지 않습니다.")]),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("git에 commit된 내용을 바탕으로 버저닝과 CHANGELOG.md를 자동으로 생성하는 방법입니다. 기본적인 원리는 단순히 git에 commit 된 로그를 뒤져서 package.json 에 새로운 버전을 명시하고 CHANGELOG.md에 해당 내용을 추가하는 방식입니다. 위에 설정한 husky와 commitlint와 직접적인 의존성이 존재하지 않습니다. 직접 git hook 과 git command 를 이용하여 구현도 가능합니다만 이미 다양한 npm 패키지들이 있고 저희는 "),a("a",{attrs:{href:"https://www.npmjs.com/package/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard-version"),a("OutboundLink")],1),t._v("이라는 npm 모듈을 사용합니다.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard-version"),a("OutboundLink")],1),t._v("은 다음과 같은 일련의 과정들을 자동화 해줍니다.")]),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("완료된 형태는 다음과 같습니다.")]),t._v(" "),t._m(13),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Monorepo 를 사용하는 경우 lerna를 활용하여 패키지별 버저닝 및 CHAGELOG 자동화를 하기 때문에 본 내용을 적용하면 충돌이 납니다. Monorepo 에서의 버저닝 및 CHANGELOG 자동화는 "),a("router-link",{attrs:{to:"/guide/monorepo/"}},[t._v("Monorepo")]),t._v("를 참고바랍니다.")],1)]),t._v(" "),t._m(14),t._v(" "),a("p",[t._v("패키지를 설치하고 package.json 에 스크립트를 추가합니다.")]),t._v(" "),t._m(15),t._m(16),t._m(17),t._v(" "),t._m(18)])},n,!1,null,null,null);s.default=r.exports}}]);